/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 * Portions Copyright (C) Philipp Kewisch, 2016 */

#ifndef __SECT163K1_H
#define __SECT163K1_H

#include "ecctypes.h"

void eccint_mod_sect163k1(eccint_t *in, eccint_t *res, const curve_t *curve) {
    // Seog Chung Seo et al, Algorithm 3
    eccint_t tmp;

    for (size_t i = 41; i > 20; i--) {
        tmp = in[i];
        in[i - 21] ^= (tmp << 5);
        in[i - 20] ^= (tmp << 4) ^ (tmp << 3) ^ tmp ^ (tmp >> 3);
        in[i - 19] ^= (tmp >> 4) ^ (tmp >> 5);
    }

    tmp = in[20] >> 3;
    in[0] ^= (tmp << 7) ^ (tmp << 6) ^ (tmp << 3) ^ tmp;
    in[1] ^= (tmp >> 1) ^ (tmp >> 2);
    in[20] &= 0x07;
}

static curve_t sect163k1 = {
    // z^163+z^7+z^6+z^3+1 = z^163 + 0xC9
    .q = { 0xC9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08 },

    .a = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
    .b = { 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },

    .P = {{ 0xE8, 0xEE, 0x94, 0x5C, 0x5E, 0x6D, 0x4E, 0xDE, 0x93, 0xD7, 0x07, 0xAA, 0xAC, 0x11, 0xBC, 0x7B, 0x53, 0xC0, 0x13, 0xFE, 0x02 },
          { 0xD9, 0xA3, 0xDA, 0xCC, 0x38, 0xD5, 0x36, 0x05, 0x80, 0x2E, 0x1F, 0x32, 0x58, 0xFF, 0x38, 0x5D, 0xB0, 0x0F, 0x07, 0x89, 0x02 }}, // flipped order

    .n = { 0xC9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08 },
    //.n = { 0xEF, 0xA5, 0xF8, 0x99, 0x0D, 0xCC, 0xE0, 0xA2, 0x08, 0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04 }, // flipped order

    .h = 0x02,
    .words = 21,
    .m = 163,
    .mod_fast = eccint_mod_sect163k1
};

#endif
